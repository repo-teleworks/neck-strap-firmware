C51 COMPILER V7.20   P2P_DEMO_TX_MENU                                                      04/10/2014 16:48:40 PAGE 1   


C51 COMPILER V7.20, COMPILATION OF MODULE P2P_DEMO_TX_MENU
OBJECT MODULE PLACED IN p2p_demo_tx_menu.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe p2p_demo_tx_menu.c DB OE BR DF(SI1000MB_SI1000,FREQUENCY_BAND_434,TRANSCEIV
                    -ER_OPERATION,FOUR_CHANNEL_IS_USED,EXTENDED_PACKET_FORMAT,TRACE_ENABLED) INCDIR(..\..\bsp;..\..\stack;c:\SiLabs\MCU_3\Inc
                    -)

line level    source

   1          /*!\file p2p_demo_tx_menu.c
   2           * \brief P2P demo code on top of the EZMacPRO stack.
   3           *
   4           *
   5           * \n This software must be used in accordance with the End User License
   6           * \n Agreement.
   7           *
   8           * \b COPYRIGHT
   9           * \n Copyright 2012 Silicon Laboratories, Inc.
  10           * \n http://www.silabs.com
  11           */
  12          
  13          #include "..\..\common.h"
  14          #include "p2p_demo_tx_node.h"
*** WARNING C245 IN LINE 81 OF P2P_DEMO_TX_NODE.H: unknown #pragma, line ignored
*** WARNING C245 IN LINE 101 OF P2P_DEMO_TX_NODE.H: unknown #pragma, line ignored
  15          #include "p2p_demo_tx_menu.h"
  16          
  17          
  18          SEGMENT_VARIABLE(lcd_data[22], U8, APPLICATION_MSPACE);
  19          
  20          #ifdef DOG_LCD_ENABLED
              /*!
               * Display the actual menu on the LCD.
               */
              void vPerformMenu(MENU_ITEM menu_item)
              {
                  switch (menu_item)
                  {
                      case sMenu_StartupScreen:
                          // Display SiLabs startup screen
                          LcdClearDisplay();
                          LcdSetPictureCursor(LCD_LINE_1, 20);
                          LcdDrawPicture(silabs87x40);
                          memcpy(lcd_data, "Network Application  ", 21);
                          LcdWriteLine(LCD_LINE_7, lcd_data);
                          sprintf(lcd_data, "  P2P Demo v        ");
                          memcpy(&lcd_data[12], APP_FW_VERSION, 6);
                          LcdWriteLine(LCD_LINE_8, lcd_data);
                          break;
              
                      case sMenu_TxScreen:
                          // Show Tx screen
                          LcdClearDisplay();
                          memcpy(lcd_data, "Network Application  ", 21);
                          LcdWriteLine(LCD_LINE_1, lcd_data);
                          memcpy(lcd_data, "---------------------", 21);
                          LcdWriteLine(LCD_LINE_2, lcd_data);
                          LcdWriteLine(LCD_LINE_7, lcd_data);
                          memcpy(lcd_data, "       Tx Node       ", 21);
                          LcdWriteLine(LCD_LINE_3, lcd_data);
                          sprintf(lcd_data, "Packet content:%5u", wPacketCounter);
                          LcdWriteLine(LCD_LINE_5, lcd_data);
C51 COMPILER V7.20   P2P_DEMO_TX_MENU                                                      04/10/2014 16:48:40 PAGE 2   

                          break;
              
                      case sMenu_TxRefreshCounter:
                          // Refresh number of packets sent
                          sprintf(lcd_data, "Packet content:%5u", wPacketCounter);
                          LcdWriteLine(LCD_LINE_5, lcd_data);
                          break;
              
                      case sMenu_PacketTransmit:
                          // Show transmit state
                          memcpy(lcd_data, " Sleep    Transmit * ", 21);
                          LcdWriteLine(LCD_LINE_8, lcd_data);
                          break;
              
                      case sMenu_SleepMode:
                          // Show sleep state
                          memcpy(lcd_data, " Sleep *  Transmit   ", 21);
                          LcdWriteLine(LCD_LINE_8, lcd_data);
                          break;
                  }
              }
              
              #endif //DOG_LCD_ENABLED


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
